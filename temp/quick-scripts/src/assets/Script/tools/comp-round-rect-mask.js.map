{"version":3,"sources":["assets/Script/tools/comp-round-rect-mask.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import property = cc._decorator.property;\r\nimport ccclass = cc._decorator.ccclass;\r\nimport executeInEditMode = cc._decorator.executeInEditMode;\r\nimport disallowMultiple = cc._decorator.disallowMultiple;\r\nimport requireComponent = cc._decorator.requireComponent;\r\nimport menu = cc._decorator.menu;\r\n\r\ncc.macro.ENABLE_WEBGL_ANTIALIAS = true;\r\n\r\n@ccclass()\r\n//@ts-ignore\r\n@executeInEditMode(true)\r\n//@ts-ignore\r\n@disallowMultiple(true)\r\n@requireComponent(cc.Mask)\r\n@menu(\"Common/圆角遮罩\")\r\nexport class RoundRectMask extends cc.Component {\r\n\r\n    @property()\r\n    private _radius: number = 50;\r\n\r\n    @property({ tooltip: \"圆角半径:\\n0-1之间为最小边长比例值, \\n>1为具体像素值\" })\r\n\r\n    public get radius(): number {\r\n        return this._radius;\r\n    }\r\n\r\n    //    public radius: number = 50;\r\n    public set radius(r: number) {\r\n        this._radius = r;\r\n        this.updateMask(r);\r\n    }\r\n\r\n    // @property(cc.Mask)\r\n    protected mask: cc.Mask = null;\r\n\r\n    protected onEnable(): void {\r\n        this.mask = this.getComponent(cc.Mask);\r\n        // this.updateMask(this.radius);\r\n        // this.node.on(cc.Node.EventType.POSITION_CHANGED, () => {\r\n        //     this.updateMask(this.radius);\r\n        // }, this)\r\n\r\n        // this.node.on(cc.Node.EventType.SIZE_CHANGED, () => {\r\n        //     this.updateMask(this.radius);\r\n        // }, this)\r\n    }\r\n\r\n    private updateMask(r: number) {\r\n        let _radius = r >= 0 ? r : 0;\r\n        if (_radius < 1) {\r\n            _radius = Math.min(this.node.width, this.node.height) * _radius;\r\n        }\r\n        this.mask[\"radius\"] = _radius;\r\n        this.mask[\"onDraw\"] = this.onDraw.bind(this.mask);\r\n        this.mask[\"_updateGraphics\"] = this._updateGraphics.bind(this.mask);\r\n        this.mask.type = cc.Mask.Type.RECT;\r\n    }\r\n\r\n    private _updateGraphics() {\r\n\r\n        // @ts-ignore.\r\n        let graphics = this._graphics;\r\n        if (!graphics) {\r\n            return;\r\n        }\r\n        this.onDraw(graphics);\r\n    }\r\n\r\n    /**\r\n     * mask 用于绘制罩子的函数.\r\n     * this 指向mask 对象,需要特别注意.\r\n     * @param graphics\r\n     */\r\n    protected onDraw(graphics: cc.Graphics) {\r\n        // Share render data with graphics content\r\n        graphics.clear(false);\r\n        let node = this.node;\r\n        let width = node.width;\r\n        let height = node.height;\r\n        let x = -width * node.anchorX;\r\n        let y = -height * node.anchorY;\r\n        graphics.roundRect(x, y, width, height, this.radius || 0);\r\n        if (cc.game.renderType === cc.game.RENDER_TYPE_CANVAS) {\r\n            graphics.stroke();\r\n        } else {\r\n            graphics.fill();\r\n        }\r\n    }\r\n\r\n    update(){\r\n        this.updateMask(this.radius);\r\n    }\r\n}"]}